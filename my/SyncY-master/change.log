2015-09-12
v2.5.3
1、解决了Sync模式下会存在空文件夹的情况,但还会有两种情况空文件夹无法自动删除：一是新建的文件夹为空，之后同步了一次且不包含普通文件，然后删除一段的空文件夹，在下一次同步时还会再次创建此删除的文件夹；二是某个文件夹下面的内容被清空，但文件夹还在，在之后同步完成之后，再删除一端的文件夹，再在下一次同步的时候，这个文件将会被创建。只有被删除文件夹的下面包含有普通文件，对应端的相应文件夹在同步时才会被删除。

2015-06-23
v2.5.2
1、解决了极低概率的出现记录文件下载信息的文件损坏，导致报“IndexError:list index out of range”的错误而无法下载的问题。
2、解决了极低概率的出现文件上传完成，服务器返回http状态码为200，但返回内容体为“error_code:0,error_msg:no error”的非正常信息，导致线程出错不能结束退出，致使主线程在一直等待线程退出而出现假死情况。

2015-05-26
v2.5.1
1、解决了在创建远程目录和秒传文件时报ValueError: No JSON object could be decoded的错误（只有2.5.0版有此bug）。

2015-05-20
v2.5.0
1、新增加密支持，每个同步目录设置节下面新增encryption和encryptkey两个配置项，encryption为'0'时不加密，为'1'-ARC4加密，'2'-Blowfish加密，'3'-AES加密，encryptkey为加密密钥，长度必须为8-32位字符，如启用加密必须安装包python-crypto，不启用加密可以不安装python-crypto包，也可以不设置encryption和encryptkey配置项。一旦启用加密，请牢记密钥及设置的加密方法，将来下载文件时加密密钥或加密方法错误将会导致下载的文件数据不正确。某个同步文件夹一旦设置为启用加密，所有上传和下载的文件都将进行加密或解密操作，因此云端的加密文件夹下面请勿手动添加明文文件！如果已有文件上传至云端，要想修改加密方法或密钥，最好全部重新上传所有文件，否则会导致云端存在不同加密方法或密钥加密出来的文件，将来下载时将无法区分，导致部分文件无法解密！
2、新增windows系统支持，只要在windows系统上安装了python2.7及pywin32、pycurl、pycrypto包即可正常运行，我在win7系统上运行一切正常。windows系统上配置文件默认在一个文件下下面，如果不在一个文件夹下面，请修改syncy.py文件中的配置文件地址。windows系统的文件夹分隔符请使用“/”，而不要使用windows默认的“\”。


2015-05-10
v2.2.1
1、修复了当日志文件不存在时，多创建了一个跟日志文件名同名的目录的bug。
2、修复了零长度文件无法下载的bug。
3、授权服务网址调整到自有域名：www.syncy.cn。

2015-04-06
v2.2.0
1、优化了云端目录的设置，云端目录设置可兼容识别以“/apps/SyncY”和“/我的应用程序/SyncY”开头的设置。
2、优化块大小设置项，如果上传文件的大小/1024大于设置的块大小，上传此文件是块大小将临时调整为文件大小/1024，其它时候上传或下载的块大小由配置项决定。
3、增加了上传单个文件超过20G前的报错提示，以防止上传很长时间后导致无法合并大文件的错误而浪费很多上传时间（如需上传大于20G的文件，建议用压缩工具分片压缩或其它工具对文件进行分割，使单个文件小于20G）。
4、上传和下载限速设置支持单位K、M，如：100K = 100 * 1024 byte/s。
5、配置的云端同步根目录不存在时将会创建，以解决云端根目录不存在时运行报错的问题。
6、升级了同步信息数据版本，以解决某些特殊情况下进行文件修改时间转码时报整数越界的问题。
7、简化日志浏览，合并运行日志和错误日志输出，通过标识来区别是错误消息还是普通信息（ERROR--错误信息，WARNING--警告信息，INFO--普通运行信息），只保留syncylog配置项，取消了syncyerrlog配置参数。

2015-02-04
v2.1.2
1、修复了一个输出错误日志的内容存在中文字符时转码失败，导致程序退出的bug，。
2、修复了一个当下载文件时，服务器返回了一个非预期的代码，导致无法解析json对象，且没有记录错误消息的问题。
3、修复了一个在部分设备上创建线程失败，导致程序退出的bug。

2015-01-22
v2.1.1
1、修复了在获取文件列表时无法访问服务器，因而不能解析json对象导致程序退出的bug。
2、优化了向服务器发送请求的数据，避免特定条件下产生curl参数值不可用的错误导致程序退出。
3、优化了错误消息的显示，curl错误将显示错误消息。
4、优化了多平台的支持，解决在部分平台上创建线程失败导致程序退出的bug。

2015-01-16
v2.1.0
1、解决了线程数开多了后导致软件segmenation fault错误的bug。（在此感谢曾少同学的帮助才找出问题原因。）
2、降低了内存占用，现在每多开一个线程内存占用只增加32K，v2.0.0版每线程增加2M左右。

